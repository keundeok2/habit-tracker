{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","components/simpleHabit.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","console","log","this","name","count","className","onClick","PureComponent","HabitAddForm","memo","inputRef","React","createRef","formRef","ref","onSubmit","event","preventDefault","current","value","onAdd","type","placeholder","Habits","handleAdd","habits","map","id","onReset","Component","Navbar","totalCount","SimpleHabit","useState","setCount","spanRef","useRef","useCallback","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAqDeA,E,4MA1CbC,gBAAkB,WAChB,EAAKC,MAAMC,YAAY,EAAKD,MAAME,Q,EAGpCC,gBAAkB,WAChB,EAAKH,MAAMI,YAAY,EAAKJ,MAAME,Q,EAGpCG,aAAe,WACb,EAAKL,MAAMM,SAAS,EAAKN,MAAME,Q,uDAjBjC,WACEK,QAAQC,IAAR,iBAAsBC,KAAKT,MAAME,MAAMQ,KAAvC,e,kCAGF,WACEH,QAAQC,IAAR,iBAAsBC,KAAKT,MAAME,MAAMQ,KAAvC,sB,oBAeF,WAAU,IAAD,EACiBD,KAAKT,MAAME,MAA3BQ,EADD,EACCA,KAAMC,EADP,EACOA,MAEd,OACE,qBAAIC,UAAU,QAAd,UACE,sBAAMA,UAAU,aAAhB,SAA8BF,IAC9B,sBAAME,UAAU,cAAhB,SAA+BD,IAC/B,wBACEC,UAAU,8BACVC,QAASJ,KAAKV,gBAFhB,SAIE,mBAAGa,UAAU,yBAEf,wBACEA,UAAU,8BACVC,QAASJ,KAAKN,gBAFhB,SAIE,mBAAGS,UAAU,0BAEf,wBACEA,UAAU,4BACVC,QAASJ,KAAKJ,aAFhB,SAIE,mBAAGO,UAAU,0B,GA5CHE,iBC2BLC,EA3BMC,gBAAK,SAAAhB,GACxB,IAAMiB,EAAWC,IAAMC,YACjBC,EAAUF,IAAMC,YAYtB,OACE,uBAAME,IAAKD,EAASR,UAAU,WAAWU,SAX1B,SAAAC,GACfA,EAAMC,iBAEN,IAAMd,EAAOO,EAASQ,QAAQC,MAC9BhB,GAAQV,EAAM2B,MAAMjB,GAEpBO,EAASQ,QAAQC,MAAQ,IAKzB,UACE,uBACEL,IAAKJ,EACLW,KAAK,OACLhB,UAAU,YACViB,YAAY,UAEd,wBAAQjB,UAAU,aAAlB,uBCsBSkB,E,4MAzCb/B,gBAAkB,SAAAG,GAChB,EAAKF,MAAMC,YAAYC,I,EAGzBC,gBAAkB,SAAAD,GAChB,EAAKF,MAAMI,YAAYF,I,EAGzBG,aAAe,SAAAH,GACb,EAAKF,MAAMM,SAASJ,I,EAGtB6B,UAAY,SAAArB,GACV,EAAKV,MAAM2B,MAAMjB,I,4CAGnB,WAAU,IAAD,OACP,OACE,qCACE,cAAC,EAAD,CAAciB,MAAOlB,KAAKsB,YAC1B,6BACGtB,KAAKT,MAAMgC,OAAOC,KAAI,SAAA/B,GACrB,OACE,cAAC,EAAD,CAEEA,MAAOA,EACPD,YAAa,EAAKF,gBAClBK,YAAa,EAAKD,gBAClBG,SAAU,EAAKD,cAJVH,EAAMgC,SASnB,wBAAQtB,UAAU,eAAeC,QAASJ,KAAKT,MAAMmC,QAArD,8B,GAlCaC,aCUNC,E,4JAXb,WACE,OACE,sBAAKzB,UAAU,SAAf,UACE,mBAAGA,UAAU,4BACb,iDACA,sBAAMA,UAAU,eAAhB,SAAgCH,KAAKT,MAAMsC,oB,GAN9BxB,iB,GCGHsB,Y,aCsBHG,EAzBK,SAAAvC,GAAU,IAAD,EACDwC,mBAAS,GADR,mBACpB7B,EADoB,KACb8B,EADa,KAErBC,EAAUC,mBAEV5C,EAAkB6C,uBAAY,WAClCH,EAAS9B,EAAQ,MAOnB,OAJAkC,qBAAU,WACRtC,QAAQC,IAAR,8BAAmCG,MAClC,IAGD,qBAAIC,UAAU,QAAd,UACE,sBAAMS,IAAKqB,EAAS9B,UAAU,aAA9B,qBAGA,sBAAMA,UAAU,cAAhB,SAA+BD,IAC/B,wBAAQC,UAAU,8BAA8BC,QAASd,EAAzD,SACE,mBAAGa,UAAU,6BCdrBkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.04eafc92.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\n\nclass Habit extends PureComponent {\n  componentDidMount() {\n    console.log(`habit: ${this.props.habit.name} mounted`);\n  }\n\n  componentWillUnmount() {\n    console.log(`habit: ${this.props.habit.name} will unmounted`);\n  }\n\n  handleIncrement = () => {\n    this.props.onIncrement(this.props.habit);\n  };\n\n  handleDecrement = () => {\n    this.props.onDecrement(this.props.habit);\n  };\n\n  handleDelete = () => {\n    this.props.onDelete(this.props.habit);\n  };\n\n  render() {\n    const { name, count } = this.props.habit;\n\n    return (\n      <li className=\"habit\">\n        <span className=\"habit-name\">{name}</span>\n        <span className=\"habit-count\">{count}</span>\n        <button\n          className=\"habit-button habit-increase\"\n          onClick={this.handleIncrement}\n        >\n          <i className=\"fas fa-plus-square\"></i>\n        </button>\n        <button\n          className=\"habit-button habit-decrease\"\n          onClick={this.handleDecrement}\n        >\n          <i className=\"fas fa-minus-square\"></i>\n        </button>\n        <button\n          className=\"habit-button habit-delete\"\n          onClick={this.handleDelete}\n        >\n          <i className=\"fas fa-trash\"></i>\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Habit;\n","import React, { memo } from \"react\";\n// rcc -> rsi\nconst HabitAddForm = memo(props => {\n  const inputRef = React.createRef();\n  const formRef = React.createRef();\n\n  const onSubmit = event => {\n    event.preventDefault(); // 브라우저의 기본기능을 취소시킴 ( form이 submit 되면 화면이 전체 refresh )\n\n    const name = inputRef.current.value;\n    name && props.onAdd(name);\n\n    inputRef.current.value = \"\";\n    // this.formRef.current.reset();\n  };\n\n  return (\n    <form ref={formRef} className=\"add-form\" onSubmit={onSubmit}>\n      <input\n        ref={inputRef}\n        type=\"text\"\n        className=\"add-input\"\n        placeholder=\"Habit\"\n      ></input>\n      <button className=\"add-button\">Add</button>\n    </form>\n  );\n});\n\nexport default HabitAddForm;\n\n/*\nimport React, { PureComponent } from \"react\";\n\nclass HabitAddForm extends PureComponent {\n  inputRef = React.createRef();\n  formRef = React.createRef();\n\n  onSubmit = event => {\n    event.preventDefault(); // 브라우저의 기본기능을 취소시킴 ( form이 submit 되면 화면이 전체 refresh )\n\n    const name = this.inputRef.current.value;\n    name && this.props.onAdd(name);\n\n    this.inputRef.current.value = \"\";\n    // this.formRef.current.reset();\n  };\n\n  render() {\n    return (\n      <form ref={this.formRef} className=\"add-form\" onSubmit={this.onSubmit}>\n        <input\n          ref={this.inputRef}\n          type=\"text\"\n          className=\"add-input\"\n          placeholder=\"Habit\"\n        ></input>\n        <button className=\"add-button\">Add</button>\n      </form>\n    );\n  }\n}\n\nexport default HabitAddForm;\n*/\n","import React, { Component } from \"react\";\nimport Habit from \"./habit\";\nimport HabitAddForm from \"./habitAddForm\";\n\nclass Habits extends Component {\n  handleIncrement = habit => {\n    this.props.onIncrement(habit);\n  };\n\n  handleDecrement = habit => {\n    this.props.onDecrement(habit);\n  };\n\n  handleDelete = habit => {\n    this.props.onDelete(habit);\n  };\n\n  handleAdd = name => {\n    this.props.onAdd(name);\n  };\n\n  render() {\n    return (\n      <>\n        <HabitAddForm onAdd={this.handleAdd} />\n        <ul>\n          {this.props.habits.map(habit => {\n            return (\n              <Habit\n                key={habit.id}\n                habit={habit}\n                onIncrement={this.handleIncrement}\n                onDecrement={this.handleDecrement}\n                onDelete={this.handleDelete}\n              />\n            );\n          })}\n        </ul>\n        <button className=\"habits-reset\" onClick={this.props.onReset}>\n          Reset All\n        </button>\n      </>\n    );\n  }\n}\n\nexport default Habits;\n","import React, { PureComponent } from \"react\";\n\nclass Navbar extends PureComponent {\n  render() {\n    return (\n      <nav className=\"navbar\">\n        <i className=\"navbar-logo fas fa-leaf\"></i>\n        <span>Habit Tracker</span>\n        <span className=\"navbar-count\">{this.props.totalCount}</span>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport \"./app.css\";\nimport Habits from \"./components/habits\";\nimport Navbar from \"./components/navbar\";\n\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: \"Reading\", count: 0 },\n      { id: 2, name: \"Running\", count: 0 },\n      { id: 3, name: \"Coding\", count: 0 },\n    ],\n  };\n\n  handleIncrement = habit => {\n    const habits = this.state.habits.map(item => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count + 1 };\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n\n  handleDecrement = habit => {\n    const habits = this.state.habits.map(item => {\n      if (item.id === habit.id) {\n        const count = habit.count - 1;\n        return { ...habit, count: count < 0 ? 0 : count };\n      }\n      return item;\n    });\n    this.setState({ habits });\n  };\n\n  handleDelete = habit => {\n    const habits = this.state.habits.filter(item => item.id !== habit.id);\n    this.setState({ habits });\n  };\n\n  handleAdd = name => {\n    const habits = [...this.state.habits, { id: Date.now(), name, count: 0 }];\n    this.setState({ habits });\n  };\n\n  handleReset = () => {\n    const habits = this.state.habits.map(habit => {\n      if (habit.count !== 0) {\n        return { ...habit, count: 0 };\n      }\n      return habit;\n    });\n    this.setState({ habits });\n  };\n\n  render() {\n    return (\n      <>\n        <Navbar\n          totalCount={this.state.habits.filter(item => item.count > 0).length}\n        />\n        <Habits\n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\n\nconst SimpleHabit = props => {\n  const [count, setCount] = useState(0);\n  const spanRef = useRef();\n\n  const handleIncrement = useCallback(() => {\n    setCount(count + 1);\n  });\n\n  useEffect(() => {\n    console.log(`mounted & updated!: ${count}`);\n  }, []);\n\n  return (\n    <li className=\"habit\">\n      <span ref={spanRef} className=\"habit-name\">\n        Reading\n      </span>\n      <span className=\"habit-count\">{count}</span>\n      <button className=\"habit-button habit-increase\" onClick={handleIncrement}>\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n    </li>\n  );\n};\n\nexport default SimpleHabit;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport \"@fortawesome/fontawesome-free/js/all.js\";\nimport SimpleHabit from \"./components/simpleHabit\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SimpleHabit />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}